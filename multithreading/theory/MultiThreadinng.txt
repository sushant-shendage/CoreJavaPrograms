Q:In multithrading why we can't tell exact output of program?
Q:Which is the best way to define thread ?why?
P:program to prove threads are independent
P:program to get default name,current thread name,set own name to thread
P:program to rename thread
P:program to prove execution of main and custom thread
-Multitasking{defination type ,type difference,advantage},application of multithreading,diff:thread vs process
-thread class and it's methods and constructors
-ways to define threads
-Deining threads in java{using runnable and threadclass,}
-why we can't tell exact output in multithreading
-Thread life-cycle
-thread shedular
-runnable interface
-diff:start() and run()
-when we can disturb,how?why to disturb thread?
-data inconsistency problem?solution for data inconsitency :Synchronisation using -->synchronized membre using -->'synchronized' keyword
-object level lock and class level lock
-synchronized method vs block
-static synchronized method
-yield methods of thread class
[--/--/--]\\
===============================================================================================\
-Thread shedular:
   -it is part of jvm/present inside jvm
   -thread shedular is responcible to shedule thread
   -In multithrading ,thread shedular decides which thrad should be exicuted
   -because thread shedular programer can't analyse exact output.
-Runnable interface:
   -It is functional interface present in java.lang package
   -It has one abstract method i.e run() method
   -prototype of run() method:'public absract void run()'
   -Which is best way to definne thread ?why?
     -Defining thread using runnable interface is the best way.Beacuse it provides us 
      flexibility to extend other class which was not possible using thread class
-Difference between start() and run() method:
   - present inside(thread class         |runnable interface              )
   -help us to     (create thread        |execute thread                  )
   -it is          (concrete method      |abstract method                 )
   -called         (only once for thread |called multiple times for thread)  
   -called         (explicitly           | implicitly                     )

-thread life-cycle :
 -In java all thread follow thread life-cycle.
 -thread life cycle consist of various states and thata are,
   -new:when thread object is created
   -runnable:when main method is called and thread is ready for execution
   -running:thread shedular allocates processor for thread for execution
   -blocked:current thread excution paused for execution of higher priority thread 
   -terminated:after execution of main thread ,thread will go to dead state


===============================================================================================/
[--/--/--]//





-thread. Sleep() is static method

-when thread is waiting or sleeping thread then and then only we can disturb thread
-by using interrupt method we can disturb executing thread
-when thread is interrupted ,exception occurred and catches in catch block
-it throws exception in presence of above states
  -it behaves as normal program in absence above mentioned states

-prototype is 'public void inturupt()'

-when we get illegal thread exception
-can we create our own exception?
  -using throw
  -difference between throw and throws 
  [19/11/24]\\
  ===============================================================================================\
  Q::How and why interrupt thread?
  Q::When it get interrupt?
     Ans: when thread is in waiting or sleeping thread

  ***HOW WE CAN INTURUPT A THREAD***
  -To interrupt a thread java thread will class will provide interrupt method
  -interrupt method will help us to disturb the executing thread
  -it is anon-static method
  -prototype: 'public void interrupt()'
  -If a thread are in waiting state are or sleeping state then only interrupt method will disturbs the thread
  -If a threads are not going in eighter in waiting state or sleeping state then interrupt method will wait till 
   to thread will go to waiting state or sleeping state
  -If threads are not at all going to waiting state or sleeping state then there is no impact of interrupt method 

  ===============================================================================================/
 [19/11/24]//
 Questions on string:
 01) String characters?
 02) why string are immutable?
 03) Why do we require OOPs concepts?
 04) what is object? Why we require object?
 05) What is constructor?
 06) What is constructor chaining? Why we do constructor chaining?
     ANS:-
         -We do constructor chaining in order to avoid duplicate code in constructors
 07) what is Encapsulation?
 08) difference between arraylist and vector?


What is data inconsistency problem?[!][program to demonstrate data inconsistency problem]
When multiple threads executing simultaneously on same java object 
there might be chances of data consistence .To avoid this problem we go for Synchronization.

data consistency with analogy of biryani problem.
Solution: giving one person chance at a time
Solution: Executing one thread at a time instead of simultaneously

1)vectors are thread safe: One thread execute at time 
default size for vector=10  increases 100% in array list 50% increases

project of seat booking(implement it[!])


limitation of synchronization:
Time consuming as one thread is allowed to execute at a time
[21/11/24]\\
===============================================================================================\
  ***SYNCHRONISATION***
  TOPIC LEFT...
   -FILE HANDLING
   -JAVA 1.8

***Data inconsistency problem***:
  -when multiple threads are executing simultaneously on the same java object 
   then there may be chances of data inconsistency problem
  -diagram[!] showing object represented by circle of which let semi circle is set of non -synchronized method other right will part-synchronized
  -to overcome data inconsistency problem we go for synchronization .

***Synchronization*** :
  -To achieve synchronization java will provide 'Synchronized' keyword
  -Synchronization is the process by which we are going to control 
    accessibility of multiple threads to a particular resource object.
  -'Synchronized' is a modifier ,it is applicable only for 'methods'(for both static and non-static method) and 'blocks'
  -we can't use synchronized keyword for classes and variables
  -The main advantage of synchronization is we can overcome data inconsistency problem
  -The main disadvantage of synchronization is it will increase waiting period of other threads so that it affect the performance

{NOT RECOMMANDED TO ANSWER IN INTERVIEW}
TYPES OF SYNCHRONIZATION :
A] process synchronization
B] thread synchronization
   -a)Mutual  exclusion(synchronized block)(static synchronized method)
   -b)cooperation(inter thread communication)
      -wait and notify overloaded methods in object class
      -itc=threads communicating is each other using object class methods mentioned above
{
WAHT IS DEADLOCK?
WHAT ARE DEOMON THREADS?
}

***object level lock***:
-Whenever we are using synchronized concept automatically lock concept will come into picture 
  because synchronization is internally implemented by 'lock' concept
-In java each and every object is having it's own unique lock
-If any thread wants to execute synchronized  method then that thread should have object level lock 
  then it will execute synchronized method of the same object 
-If thread is having object level lock all synchronized method of the same object will be executed alone by that thread one by one
-if one thread having lock then all other threads are not allowed to execute synchronized method simultaneously
-Acquiring and releasing the lock is responsible by jvm or thread scheduler but as a programmer we are not responsible for that. 
-When one thread is executing synchronized method other threads are allowed to execute non--Synchronized method simultaneously

***class level lock***:(replace object with class in above points)

***Synchronized block***:
-Because of very few lines of code if we are getting the data inconsistency  problem then
  instead of making whole method as a synchronized we will write those statement inside a synchronized block
-the block which is prefixed with synchronized keyword is known as synchronized block 
-Synchronized(this){...}  or Synchronized(object reference){...}


Questions:
Q: What is method overloading?(in absence of method overloading what is problem? How it is resolved by method overloading?)Advantage?
Q: Constructor overloading
Q: What is inheritance ?Advantage ?
Q: Explain diamond problem
Q: Difference between method overloading and method overriding.
===============================================================================================/
 [21/11/24]//

{
vectors are synchronized while arraylist is not
}




 [21/11/24]\\
===============================================================================================\
{
  -using synchronized block we can reduce waiting period of threads 
  -instead of making whole method we can make specific set of statement/instruction(responsible for data inconsistency) 
    synchronized using synchronized block which will lead to reduce waiting period of thread
    Q:DIFFERENCE BETWEEN SYNCHRONIZED BLOCK AND SYNCHRONIZED METHOD
 -[!]program to demonstrate above statements
 -there is no specific order for modifiers in java
 -to make common variable for all object we make it as static variable
}

-the main advantage of synchronized block is ,it help us to reduce the waiting period of thread to improve the performance.

***STATIC SYNCHRONIZED METHOD***
-in java each and every class having there own lock
-if any threads wants to execute static synchronized method then that thread should have class level block
-If one thread is executing static synchronized method other threads are not allowed to execute static synchronized method
-Acquiring or releasing class level lock , depends on jvm or thread scheduler
//-diagram for class level lock 
===============================================================================================/
 [21/11/24]//
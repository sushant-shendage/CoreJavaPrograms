SOFTWARE
  - Set of programs which works in co-ordination with each other to perform a number of specific tasks in order to solve real world problem digitally.   
  -	E.g:power point presentation,excel,Pubg etc
==================================================================================================
COMPUTER
  -	Computer is an electronic device which is composed of software and hardware components.
    Primarily used to store, process and retrive data
  -	Examples of software components consist of Os,VM,device drivers,firmwares,programing softwares, middleware
  - Examples of hardware components consist ofProcessing units, input device, output device
==================================================================================================
What is interpreter?
  - It is an intermidiate software which is used to convert High level language code into machine level code.
  - It execute code line by line without creating intermidiate file.
  - As executess line by line it is slower
  - Errors are detected one by one at runtime as they encountered
  - example : java
==================================================================================================
  What is compiler?
  - It is an intermidiate software which is used to convert High level language code into machine level code.
  - It executes whole code at once and by creating intermidiate file called as executable file
  - As it execute whole code at once it is faster
  - Errors are detected afet copilation code
  - Example : python ,javaScript
 ================================================================================================== 
PROGRAMING
-	<what is programing ? why we do programing>
-	<Difference between coding and programing>
  Coding:
	Involves writing code in a specific programming language (e.g., Java, Python, C++).
	Focuses on translating logic into machine-readable syntax.
	A subset of programming, mainly concerned with writing and debugging code.
	Requires knowledge of syntax, logic, and basic problem-solving.
	Example: Writing a function to calculate the sum of two numbers in Java.
  Programming:
	Involves the complete process of developing a software application.
	Includes coding, designing, testing, debugging, and maintenance.
	Focuses on building fully functional applications and solving complex problems.
	Requires knowledge of algorithms, data structures, software architecture, and system design.
	 
  Key Differences:
	Scope: Coding is about writing code, while programming is about developing full software.
	Complexity: Coding is basic, whereas programming is advanced.
	Involves: Coding deals with syntax and debugging, while programming includes problem-solving, architecture, and design.
	Outcome: Coding results in small scripts or functions, whereas programming results in complete software applications.
==================================================================================================
HARDWARE
Set of electronic components on which applications runs are known as hardware. E.g::CPU,GPU,SSD,HDD
==================================================================================================
CONVENTIONS  IN  JAVA
-	Conventions are nothing but industry standereds whicha are oprtional but highky recommended to follow.
    While excuting coventions are not checked by compiler
-   For class name and interface name use : Camelcase
-	For variable name and method name use : Pascal case
-	Explain pascal vs camal case
==================================================================================================
PROGRAMING LANGUAGE:
-	Language :Language is medium of communication
-	Programing language: Programing language are the languages used to communicate with Computer
-	Technically we can say that,
    The languages by using which we command or provide instructions to the computer in order to 
    perform task from computer is known as Programing language
==================================================================================================
 JDK ARCHITECTURE CONSIST OF JDK ,JRE AND JVM
-	JDK:
-	JDk stands for 'Java Development Kit' is a package given oracle community. It is used to develop as well run java application.
-	it internally consist of JRE and JVM
-	Technically we can define it as -> JRE along with development tool is termed as JDK.
-	JRE:
-	JRE stands for Java Runtime Environment. It is used to run java applications .
-	It internally consist of JVM
-	Technically we can define it as ->JVM along with built in Libraries termed as JRE
-	JVM
-	JVM stand for Java Virtual Machine .
-	It is an interpreter of java language which converts byte code which can be  generated by any platform  into corresponding platforms machine code ,which will lead to achieve platform independency feature.
Summery
Jdk=JRE+Development tools(used to devlop an run java applications)
Jre=jvm+built in Libraries(used to run hava applications)
Jvm=java interpreter used to achieve platform independency
(used to convert byte code to corresponding platform's native machine code and execution of code line by line)

==================================================================================================
About Java Language:
-	Java is a high-level, object-oriented programming language.
-	It was developed by James Gosling and his team at Sun Microsystems in 1996. It was initially called 'oak' and later renamed Java.
-	The purpose of its creation was to develop a language suitable for embedded systems and to address the limitations
     previous  languages of C and C++ languages. 
-	Java is popular for its features like platform independence (thanks to the Java Virtual Machine) and,
-	It is a statically typed and strongly coupled language.
-	Its standardized support for exception handling and inbuilt support of multithrading makes it a robust language.
- in 2010 owned by Oracal,in 2014 jdk 1.8 realsed which is stable version, and latest version is ___

==================================================================================================
History  of java:
-	It was developed by James Gosling and his team at Sun Microsystems in 1995. It was initially called 'oak' and later renamed Java.
-	The purpose of its creation was to develop a language suitable for embedded systems and to address the limitations of C and C++ languages.
-	It's first version was released in 1996
-	in 2010 Java was owned by oracle
-	stable version of java language is jdk 1.8 which was released in 2014

==================================================================================================
Platform:
-	The combination of s/w and h/w component on which computer software runs is known as platform
-	Platform dependent software:
-	The softwares which run on only that type of platform on which they made I.e native type of platform are known as platform dependent softwares
-	E.g: software made using cand c++
-	Platform independent software:
-	The softwares which run on any  type of platform irrespective of platform on which they made  are known as platform independent softwares
E.g:software made using java

==================================================================================================
Platform dependency in java :
-	Platform dependency in c and c++
-	When we write code in c++,save with .cpp extension. After successfull compilation of code native code is generated. Native code is the language code which will execute only platform type on which they made.
-	Due to this s/w made using c and c++ are platform dependent
-	Platform independency in java
-	When we write code java save it with .java extension. After successful compilation of code will generates class file also known as byte code
-	This byte code is neither understandable to programmer as well as computer.
-	But this byte code can be converted into corresponding native machine code using JVM
-	JVM is Java Virtual Machine is a interpreter ,is a platform dependent s/w designed for each platform
-	Due to this java code can run on any platform irrespective of platform on which it is made
-	Eventually this results in achieving platform independency
-	So .software made using java are platform independent
==================================================================================================
EXPLAIN STRUCTURE OF JAVA LANGUAGE
-	Package name
-	import statements
-	class block
-	method blocks
-	each method consist of set of instruction
Execution of class starts from main method, all other methods are directly or indirectly called by main method, and execution ends at main method

==================================================================================================
Explain code "public static void main(String args[])"
- public is access modifier that specifies method can be accessible in all packaeg and classes
- static is non-access modifier which represents main method is beong to class not toclass instance
- void is return type of main method as it returns nothing
- main is identifier/name of method
- String args[] is formal argument of method which is of string array type  


Why main method made static?
-To avoid object creation for main method calling .As we are avoiding objecct creation it is memeory efficient 
so main method made static by creators of java 

Why we use main method?
-It is entry for java program. JVM looks for main method in order to execute java code.
- execution starts from main method,all methods are directly or indirectly called by main method
  and execution ends with complete execution of main method

Can we overload main method?
Yes we can overload main method.For that we have to create overloaded main method in class and 
have to call them in standard main method of string 
==================================================================================================
Tokens in java:
-	Building blocks of programing language by using which we write instructions of in programing language
-	In other way we can define it as smallest unit of programing language by using which we creat/write  instructions in language
-	In java we have several types of tokens and they are
-	Literals
-	separators
-	operators
-	comments
-	keywords
-	identifiers

==================================================================================================
LITERALS IN JAVA:
-	Literals are nothing but kinds of data we are going to deal while programing in java.
-	In java Literals are of two types
A)primitive Literals
-	Primitive Literals are the single value data. This Literals are further classified into 2 types
-	a)numerical primitive Literals
This Literals deal with number format values. Again this Literals are classified in two types and they are
-	a.1)integer literals: numerical Literals without point values
-	a.2)floating point  literals: numerical Literals with point values
-	b)non numerical primitive literals
-	b1)Character Literals: all characters on keyboard are comes under character literals. Again this Literals is divided into 3 types and that types are
-	c1)Alphabets: these literal consist of English alphabets from ‘a’ to ‘z'
They are aging divided in to three types and that types are
-	c.11)uppercase character
-	c.12)lowercase character
-	c2) digits: there total 10 digits from 0 9
-	c3) special characters: characters other than digits and alphabets
B)Non primitive literals
These are multiple valued a data.Different non primitive Literals are
-	A)class
-	B)strings
-	C)array
-	D)interface
-	E) enum

==================================================================================================
Explain keywords in java
Give rules of naming identifiers

KEYWORDS:
-	One of the tokens of java language
-	keywords are reserve words. These are compiler aware words whose meaning already known to compiler used to build instruction.
-	Programmer can't alter keywords
-	Always in lowercase
-	We can't use them as identifier and programmer can alter behavior of keywords
-	java language has 51+ keywords (!!!)
Eg::static,public,private,int,long,short,byte,float,for ,continue,break

==================================================================================================
CONDITIONAL OPERATOR
-	ternary operator used to for decision making
-	Syntax
(condition)?(operand 1):(Operand 2);  (with explanation)
-	result type depends on operand 2 and operand 3

==================================================================================================


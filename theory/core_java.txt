
-------------------------------------------------------------------------------------------------------------|
✅️✅️what is computer?
✅️✅️s/w ,h/w & h/w components 
✅️✅️language and programming language
✅️✅️levels of programing language
✅️✅️history of java
✅️✅️about java[⭐⭐⭐⭐⭐⭐⭐]
✅️✅️platform and types of platform based on platform
✅️✅️why s/w made using c,c++ are platform dependent?
✅️✅️Why s/w made using  java are platform independent?[⭐⭐⭐⭐⭐⭐⭐]
✅️✅️JDK vs JRE vs JVM [jdk architecture][⭐⭐⭐⭐⭐⭐⭐]
✅️✅️structure of java program 
✅️✅️literals in java
✅️✅️tokens in java
✅️✅️conventions in java
✅️✅️Ascii value of chars
✅️✅️datatypes-primitive datatypes in detail
✅️✅️variable ,variable classification and rules of local variables
✅️✅️refrence variable  vs object refrence variable
✅️✅️scope of vaiable in java
✅️✅️operator and types of operators in java
✅️✅️typecasting in java-primitive typecasting
✅️✅️conditional operator
✅️✅️operator precedence
✅️✅️reading data dynamically from user
✅️✅️control flow statements
✅️✅️when we use loop and nested loops
✅️✅️continue vs break statement
✅️✅️2 ways to break loop
✅️✅️faster alternative for loop statement 
✅️✅️recursion vs loop
✅️✅️explain methods(method,returntype,code modularity and advantages,syntax,charecteristics,3 types)
✅️✅️rerurn statement

✅️✅️ methods and recursion[⭐⭐⭐⭐⭐⭐⭐]

❌❌ byte cycle
-------------------------------------------------------------------------------------------------------------|
✅️✅️methos binding process  [⭐⭐⭐⭐⭐⭐⭐]
✅️✅️class loading process   [⭐⭐⭐⭐⭐⭐⭐] (?)
-------------------------------------------------------------------------------------------------------------|
✅️✅️mis.s operators(. operator,new operator,instanceof())
✅️✅️multiple class file creation and creation rules
✅️✅️static and non static members
✅️✅️object loading process[⭐⭐⭐⭐⭐⭐⭐]
✅️✅️explain constructors in java
✅️✅️explain constructor{overloading and chaining} AND method {overloading and chaining}
✅️✅️packages in javaclass in java
✅️✅️relationship and it's types
✅️✅️oops and objects
✅️✅️instance variables
✅️✅️instanciation
✅️✅️ How objects are created?
✅️✅️explain encapsulation[⭐⭐⭐⭐⭐⭐⭐]
✅️✅️generalisatoion vs sepcialiation
✅️✅️types of inheritancediamond problem and ambiguties[⭐⭐⭐⭐⭐⭐⭐]
✅️✅️super() statement
✅️✅️super () vs this()|super vs this|super vs super()|this vs this()
✅️✅️non-primitive typecasting[upcasting and downcasting|method overiding with explaination]
✅️✅️variable and method shadowing
✅️✅️Abstraction[⭐⭐⭐⭐⭐⭐⭐]
✅️✅️Abstraction[⭐⭐⭐⭐⭐⭐⭐]
✅️✅️Abstraction vs inheritance [⭐⭐⭐⭐⭐⭐⭐]
✅️✅️Polymorphism  [⭐⭐⭐⭐⭐⭐⭐]

✅️✅️abstarct methid,absratct class,concrete method ,concerete class
✅️✅️object class and its 11 non-static methods with use
✅️✅️overriding toString (),equal() and hashcode() methods
✅️✅️handshake property between equal() and hashcode() method
✅️✅️explain interface
✅️✅️explain multiple inheritance using interface[⭐⭐⭐⭐⭐⭐⭐]
-------------------------------------------------------------------------------------------------------------|
✅️✅️explain exception concept in java(exception|exception handling|exception flow |exception hirarchy
     |exception object propogation|finally block||||)[⭐⭐⭐⭐⭐⭐⭐]
.... Different ways to handle exception
      - using try-catch block
      - using Throws keyword
....  custom exceptions
      - what
      - Why we use it


-------------------------------------------------------------------------------------------------------------|
✅️✅️wrapper class(boxing,unboxing,auto boxing ,auto unboxing)
   - wraper class implements comparator and comparable   
-------------------------------------------------------------------------------------------------------------|
✅️✅️modifiers (acess /member )[⭐⭐⭐⭐⭐⭐⭐]
✅️✅️final modifiers[⭐⭐⭐⭐⭐]
-------------------------------------------------------------------------------------------------------------|
✅️✅️array
✅️✅️string -string creation using String|Builder|Buffer class
✅️✅️string mutability and how to make string mutable
✅️✅️diiference between String buffer and builder
-------------------------------------------------------------------------------------------------------------|
Collection theory ::

✅️✅️Collection interface
✅️✅️Collection framework


✅️✅️hirarchies in Collection framework 
✅️✅️Collection hirarchy
✅️✅️list interface
✅️✅️array list
✅️✅️Set,hasset,treeset
✅️✅️queue,priority queue


✅️✅️map hirarchy
✅️✅️map,hash map,


✅️✅️Collections class,Collection .sort
✅️✅️Iterator vs list iterator
✅️✅️Java generics
❌❌comparable interface
❌❌comparator interface
❌❌comparable vs Comparator interface
-------------------------------------------------------------------------------------------------------------|
- Multithreading in java:
  - Concurrency Vs Parallalism(though mutithreading achived)
  - What is multitasking?
  - Telll me about thread sheduler
  - Explain types of multitasking.
      - process based 
       - thread based=multithreading[⭐⭐⭐]
  - Applications where multithreading is used.
  - Explain How multithreading achived in java.[⭐⭐⭐]
  - Explain two ways of achiving mutithrading in java.[⭐⭐⭐]
  - Explain thread class and various method in thread class.[10/15]
  - Explain attributes of thread classs.
  - Thread class methods with theory
     - getName()
     - setName()
     - getPriority()
     - setPriority()
  - Thread life cycle[⭐⭐⭐]

      ref:
      ~to understand the concept of multithrading lern OS sub in CSE
-------------------------------------------------------------------------------------------------------------|
Hirarchies
  -Throwable-H
     -Ecception-H1  (comple-time and run-time)
     -errors-H2    
  -collection-h 
     -Collection-H1 
     -Map-H2  
-------------------------------------------------------------------------------------------------------------|
 Package-Interface-Methods
  -java.lang[p1]
    - collection/list
    - collection/set
    - collection/queue
-------------------------------------------------------------------------------------------------------------|
 Exceptions
  -ArrayIndexOutOfBound
  -InputMismatchException
  -ClassCastException
  -ClassNotFoundException
  -IllegalArgumentException(invalid input which lead to not fullfillment of requirement  ||ex:give age in negative  value is as per datatype and range but not as per requirement)


  (?)Which exception occurs when we give non-supprting range value to a variable
 Errors
  -incompatiblie type
  -possible lossy conversion
-------------------------------------------------------------------------------------------------------------|

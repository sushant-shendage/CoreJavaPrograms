class Bl
{
	public static void main(String[] args) 
	{
		/*
		    - digitCount(int num)
			 
			- pow(int base,int index)

			- fact(int num)

			-  prime(int num)

			- nextPrime(int num)

			- digitSum(int num)

			- revNumCount(int num)

			- digitDCount(int num)

			- digitICount(int num)

			

			- allFib(int num)
			- fibNum(int num)
			- deseriumNum(int num)
			- digitsAssend(int num)
			- digitsAssend(int num)
			- maxDigit(int num)
			- minDigit(int num)
			- occDigit(int num,int digit)
			- charCheck(char ch)
			- decToBin(int num)
			- binToDec(int num)
			- decToOct(int num)
			- duckNum(int num)
			-






		*/
		//digitDCount(4321);
		//CustumFibSeries(0,1,10);
		//System.out.println();
		//CustumFibSeries(2,1,10);
		rotateNum(1234);
		System.out.println("program exicuted successfully ...!");
		
	}
	public static int     digitCount     (int num)
		{
		int count=0;
		for (int i=num;i!=0 ;i/=10 )
		{
			count++;
		}
		return count;
		}
	public static int     pow            (int base,int index)
		{
		int prod=1;
		for (int i=1;i<=index ;i++ )
		{
			prod*=base;
		}
		return prod;
		}
	public static int     fact           (int num)
		{
		int prod=1;
		for (int i=1;i<=num ;i++ )
		{
			prod*=i;
		}
		return prod;
		}
	public static boolean prime          (int num)
		{
		int i;		 
		for (i=2;i<num ;i++ )
		{
			if(num%i==0)
			{
				break;
			}
		}
		return i==num;
		}
	public static int     nextPrime      (int num)
		{
			int i;
		
			for ( i=num; ;i++ )
			{
				if(prime(i))
				{
					break;
				}	 
			}
			return i;
		}
	public static int     digitSum       (int num)

		{
		int sum=0;
		for (int i=num;i!=0 ;i/=10 )
		{
			sum+=num%10;
		}
		return sum;
		 
		}
	public static int     digitSqrSum    (int num)

		{
		int sum=0;
		for (int i=num;i!=0 ;i/=10 )
		{
			sum+=((i%10)*(i%10));
		}
		return sum;
		 
		}
	public static int     digitProd      (int num)
		{
		int prod=1;
		for (int i=num;i!=0 ;i/=10 )
		{
			prod*=num%10;
		}
		return prod;
		 
		}
	public static int     revNum         (int num)
		{
		int rev=0;
		for (int i=num;i!=0 ;i/=10 )
		{
			rev=rev*10+i%10;
		}
		return rev;
		 
		}
	public static int     digitDCount    (int num) 
		{
			int dcount=0;
		for (int i=num; i>=9 ;i/=10 )
		{
		
			if(i%10<(i/10)%10)
			{
				dcount++;
				 
			}
		}

		return dcount;
		}
    public static int     digitICount    (int num) 
	 {
		int icount=0;
		for (int i=num;i>=9;i/=10)
		{
			
			if(i%10>(i/10)%10)
			{
				icount++;
			}
		}

		return icount;
     }
    public static int     dGroup         (int digit,int occ)
	 {
		 int G=0;
		 for (int i=1;i<occ ;i++ )
		 {
			 G+=digit*pow(10,i);
		 }
		return G+digit;
	 }
	public static int     dCount         (int digit,int num)

		{
		int occ=0;
		for (int i=num;i!=0 ;i/=10 )
		{
			
			if(i%10==digit)
			{
				occ++;
			}
		}
		return occ;
		}
	public static void    CustumFibSeries(int num1,int num2,int limit)
		{
		int sum=0;

		for (int i=1;i<=limit ;i++ )
		{
			System.out.print(num1+",");
			sum=num1+num2;
			num1=num2;
			num2=sum;
		}
		
		
		} 	 
	public static boolean divisible       (int numerator,int denominator)
		{
			return numerator%denominator==0;
		}
	public static int rotateNum(int num)
		{

			//System.out.println("num :"+num);
			num=(num/10)+(num%10)*(pow(10,digitCount(num)-1));
			//System.out.println("num r1 :"+num);
			
			return num=num/10+num%10*pow(10,digitCount(num)-1);
		} 
}
